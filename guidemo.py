# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'demo1.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtWidgets import QGraphicsScene,QApplication, QMainWindow, QVBoxLayout, QLabel, QPushButton, QWidget, QGroupBox, QHBoxLayout
from PyQt5.QtWidgets import QDesktopWidget
from PyQt5.QtCore import Qt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
import matplotlib.pyplot as plt
import importlib



class Ui_MainWindow(object):
	def setupUi(self, MainWindow):
		MainWindow.setObjectName("MainWindow")
		MainWindow.resize(1489, 966)
		self.centralwidget = QtWidgets.QWidget(MainWindow)
		self.centralwidget.setObjectName("centralwidget")
		self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
		self.graphicsView.setGeometry(QtCore.QRect(20, 10, 1200, 900))
		self.graphicsView.setObjectName("graphicsView")
		self.comboBox = QtWidgets.QComboBox(self.centralwidget)
		self.comboBox.setGeometry(QtCore.QRect(1230, 60, 241, 31))
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(10)
		self.comboBox.setFont(font)
		self.comboBox.setObjectName("comboBox")
		self.comboBox.addItem("")
		self.comboBox.addItem("")
		self.comboBox.addItem("")
		self.comboBox.addItem("")
		self.comboBox.addItem("")
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(12)
		font.setBold(True)
		font.setWeight(50)
		self.label = QtWidgets.QLabel(self.centralwidget)
		self.label.setGeometry(QtCore.QRect(1230, 30, 241, 31))
		self.label.setFont(font)
		self.label.setObjectName("label")
		self.label_2 = QtWidgets.QLabel(self.centralwidget)
		self.label_2.setGeometry(QtCore.QRect(1230, 220, 241, 41))
		self.label_2.setFont(font)
		self.label_2.setObjectName("label_2")
		self.pushButton_START = QtWidgets.QPushButton(self.centralwidget)
		self.pushButton_START.setGeometry(QtCore.QRect(1300, 660, 101, 41))
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(12)
		font.setBold(True)
		font.setWeight(75)
		self.pushButton_START.setFont(font)
		self.pushButton_START.setObjectName("pushButton_START")
		self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
		self.layoutWidget.setGeometry(QtCore.QRect(1230, 250, 241, 271))
		self.layoutWidget.setObjectName("layoutWidget")
		self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
		self.verticalLayout.setContentsMargins(0, 0, 0, 0)
		self.verticalLayout.setObjectName("verticalLayout")
		self.checkBox_BT = QtWidgets.QCheckBox(self.layoutWidget)
		self.checkBox_BT.setEnabled(True)
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(10)
		self.checkBox_BT.setFont(font)
		self.checkBox_BT.setObjectName("checkBox_BT")
		self.verticalLayout.addWidget(self.checkBox_BT)
		self.checkBox_FD = QtWidgets.QCheckBox(self.layoutWidget)
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(10)
		self.checkBox_FD.setFont(font)
		self.checkBox_FD.setObjectName("checkBox_FD")
		self.verticalLayout.addWidget(self.checkBox_FD)
		self.checkBox_SGY = QtWidgets.QCheckBox(self.layoutWidget)
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(10)
		self.checkBox_SGY.setFont(font)
		self.checkBox_SGY.setObjectName("checkBox_SGY")
		self.verticalLayout.addWidget(self.checkBox_SGY)
		self.checkBox_LB = QtWidgets.QCheckBox(self.layoutWidget)
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(10)
		self.checkBox_LB.setFont(font)
		self.checkBox_LB.setObjectName("checkBox_LB")
		self.verticalLayout.addWidget(self.checkBox_LB)
		self.checkBox_P1 = QtWidgets.QCheckBox(self.layoutWidget)
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(10)
		self.checkBox_P1.setFont(font)
		self.checkBox_P1.setObjectName("checkBox_P1")
		self.verticalLayout.addWidget(self.checkBox_P1)
		self.checkBox_P2 = QtWidgets.QCheckBox(self.layoutWidget)
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(10)
		self.checkBox_P2.setFont(font)
		self.checkBox_P2.setObjectName("checkBox_P2")
		self.verticalLayout.addWidget(self.checkBox_P2)
		self.checkBox_NI = QtWidgets.QCheckBox(self.layoutWidget)
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(10)
		self.checkBox_NI.setFont(font)
		self.checkBox_NI.setObjectName("checkBox_NI")
		self.verticalLayout.addWidget(self.checkBox_NI)
		self.pushButton_CLEAR = QtWidgets.QPushButton(self.centralwidget)
		self.pushButton_CLEAR.setGeometry(QtCore.QRect(1300, 730, 101, 41))
		font = QtGui.QFont()
		font.setFamily("Arial")
		font.setPointSize(12)
		font.setBold(True)
		font.setWeight(75)
		self.pushButton_CLEAR.setFont(font)
		self.pushButton_CLEAR.setObjectName("pushButton_CLEAR")
		MainWindow.setCentralWidget(self.centralwidget)
		self.statusbar = QtWidgets.QStatusBar(MainWindow)
		self.statusbar.setObjectName("statusbar")
		MainWindow.setStatusBar(self.statusbar)
		self.menubar = QtWidgets.QMenuBar(MainWindow)
		self.menubar.setGeometry(QtCore.QRect(0, 0, 1489, 22))
		self.menubar.setObjectName("menubar")
		MainWindow.setMenuBar(self.menubar)

		self.pushButton_START.clicked.connect(self.applyChanges)
		self.pushButton_CLEAR.clicked.connect(self.clearCanvas)
		self.comboBox.currentIndexChanged.connect(self.updateAlgorithmAvailability)

		self.checkboxes = [self.checkBox_BT, self.checkBox_FD, self.checkBox_SGY, self.checkBox_LB,self.checkBox_P1,self.checkBox_P2,self.checkBox_NI] 
		for checkbox in self.checkboxes:
			checkbox.stateChanged.connect(self.updateAlgorithmChange)

		self.selected_dataset = self.comboBox.currentText()
		self.selected_algorithms = "NONE"
		self.retranslateUi(MainWindow)
		self.updateAlgorithmAvailability()
		QtCore.QMetaObject.connectSlotsByName(MainWindow)


	def retranslateUi(self, MainWindow):
		_translate = QtCore.QCoreApplication.translate
		MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
		self.comboBox.setItemText(0, _translate("MainWindow", "LesMisérablesNetwork"))
		self.comboBox.setItemText(1, _translate("MainWindow", "JazzNetwork"))
		self.comboBox.setItemText(2, _translate("MainWindow", "ArgumentationNetwork"))
		self.comboBox.setItemText(3, _translate("MainWindow", "SmallDirectedNetwork"))
		self.comboBox.setItemText(4, _translate("MainWindow", "ProLeagueNetwork"))
		self.label.setText(_translate("MainWindow", "Select a dataset:"))
		self.label_2.setText(_translate("MainWindow", "Select an algorithm:"))
		self.pushButton_START.setText(_translate("MainWindow", "Start"))
		self.checkBox_BT.setText(_translate("MainWindow", "BubbleTree"))
		self.checkBox_FD.setText(_translate("MainWindow", "ForceDirected"))
		self.checkBox_SGY.setText(_translate("MainWindow", "Sugiyama"))
		self.checkBox_LB.setText(_translate("MainWindow", "LayerBundled"))
		self.checkBox_P1.setText(_translate("MainWindow", "Projection1"))
		self.checkBox_P2.setText(_translate("MainWindow", "Projection2"))
		self.checkBox_NI.setText(_translate("MainWindow", "Naive"))
		self.pushButton_CLEAR.setText(_translate("MainWindow", "Clear"))
		

	def updateAlgorithmAvailability(self):
		self.selected_dataset = self.comboBox.currentText()

		if self.selected_dataset == "LesMisérablesNetwork":
			self.checkBox_BT.setEnabled(True)
			self.checkBox_FD.setEnabled(True)

			self.checkBox_SGY.setEnabled(False)
			self.checkBox_SGY.setChecked(False)

			self.checkBox_LB.setEnabled(False)
			self.checkBox_LB.setChecked(False)

			self.checkBox_P1.setEnabled(True)
			self.checkBox_P2.setEnabled(True)
			self.checkBox_NI.setEnabled(True)

		elif self.selected_dataset == "JazzNetwork":
			self.checkBox_BT.setEnabled(True)
			self.checkBox_FD.setEnabled(True)
			
			self.checkBox_SGY.setEnabled(False)
			self.checkBox_SGY.setChecked(False)

			self.checkBox_LB.setEnabled(False)
			self.checkBox_LB.setChecked(False)

			self.checkBox_P1.setEnabled(True)
			self.checkBox_P2.setEnabled(True)
			self.checkBox_NI.setEnabled(True)

		elif self.selected_dataset == "ArgumentationNetwork":
			
			self.checkBox_SGY.setEnabled(True)
			self.checkBox_LB.setEnabled(True)
			self.checkBox_NI.setEnabled(True)

			self.checkBox_BT.setEnabled(False)
			self.checkBox_BT.setChecked(False)

			self.checkBox_FD.setEnabled(False)
			self.checkBox_FD.setChecked(False)

			self.checkBox_P1.setEnabled(False)
			self.checkBox_P1.setChecked(False)

			self.checkBox_P2.setEnabled(False)
			self.checkBox_P2.setChecked(False)

		elif self.selected_dataset == "ProLeagueNetwork":
			
			self.checkBox_SGY.setEnabled(True)
			self.checkBox_BT.setEnabled(True)
			self.checkBox_NI.setEnabled(True)
			self.checkBox_FD.setEnabled(True)
			
			self.checkBox_LB.setEnabled(False)
			self.checkBox_LB.setChecked(False)

			self.checkBox_P1.setEnabled(False)
			self.checkBox_P1.setChecked(False)

			self.checkBox_P2.setEnabled(False)
			self.checkBox_P2.setChecked(False)
			
		else:
			self.checkBox_BT.setEnabled(True)
			self.checkBox_FD.setEnabled(True)
			self.checkBox_SGY.setEnabled(True)
			self.checkBox_LB.setEnabled(True)
			self.checkBox_P1.setEnabled(True)
			self.checkBox_P2.setEnabled(True)
			self.checkBox_NI.setEnabled(True)
	

	def updateAlgorithmChange(self):
		self.selected_dataset = self.comboBox.currentText()
		for checkbox in self.checkboxes:
			if checkbox.isChecked():
				self.selected_algorithms = checkbox.text()
				other_checkboxes = self.checkboxes.copy()
				other_checkboxes.remove(checkbox)
				for othercheckbox in other_checkboxes:
					othercheckbox.setChecked(False)
				break
			else: self.selected_algorithms = 'NONE'


	def applyChanges(self):
		
		algorithm_class = create_class(self.selected_algorithms)
		layout = algorithm_class(self.selected_dataset)
		self.scene = QGraphicsScene()
		self.scene.addWidget(MatplotlibWidget(layout.fig))
		self.graphicsView.setScene(self.scene)
		self.graphicsView.show()
	

	def clearCanvas(self):
		self.scene.clear()

class MatplotlibWidget(QWidget):
    def __init__(self, figure, parent=None):
        super(MatplotlibWidget, self).__init__(parent)
        self.figure = figure
        self.canvas = FigureCanvas(self.figure)
        layout = QVBoxLayout()
        layout.addWidget(self.canvas)
        self.setLayout(layout)

def create_class(file_name):
	#动态导入模块
	module = importlib.import_module(file_name)
	#获取类对象
	created_class = getattr(module,"layout")
	return created_class